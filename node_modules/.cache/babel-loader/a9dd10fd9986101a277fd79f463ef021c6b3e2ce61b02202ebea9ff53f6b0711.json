{"ast":null,"code":"var _jsxFileName = \"/workspaces/react-quiz/src/components/finishScreen.js\";\nimport { useQuiz } from \"../contexts/QuizContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FinishScreen() {\n  //   const { points, maxPossiblePoints, highscore, dispatch } = useQuiz();\n\n  const percentage = points / maxPossiblePoints * 100;\n  let emoji;\n  if (percentage === 100) emoji = \"🥇\";\n  if (percentage >= 80 && percentage < 100) emoji = \"🎉\";\n  if (percentage >= 50 && percentage < 80) emoji = \"🙃\";\n  if (percentage >= 0 && percentage < 50) emoji = \"🤨\";\n  if (percentage === 0) emoji = \"🤦‍♂️\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \" You scored \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 41\n      }, this), \" out of\", maxPossiblePoints, \" (\", Math.ceil(percentage), \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"highscore\",\n      children: [\"(Highscore: \", highscore, \" points)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-ui\",\n      onClick: () => dispatch({\n        type: \"restart\"\n      }),\n      children: \"Restart quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = FinishScreen;\nexport default FinishScreen;\nvar _c;\n$RefreshReg$(_c, \"FinishScreen\");","map":{"version":3,"names":["useQuiz","jsxDEV","_jsxDEV","Fragment","_Fragment","FinishScreen","percentage","points","maxPossiblePoints","emoji","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Math","ceil","highscore","onClick","dispatch","type","_c","$RefreshReg$"],"sources":["/workspaces/react-quiz/src/components/finishScreen.js"],"sourcesContent":["import { useQuiz } from \"../contexts/QuizContext\";\n\nfunction FinishScreen() {\n//   const { points, maxPossiblePoints, highscore, dispatch } = useQuiz();\n\n  const percentage = (points / maxPossiblePoints) * 100;\n\n  let emoji;\n  if (percentage === 100) emoji = \"🥇\";\n  if (percentage >= 80 && percentage < 100) emoji = \"🎉\";\n  if (percentage >= 50 && percentage < 80) emoji = \"🙃\";\n  if (percentage >= 0 && percentage < 50) emoji = \"🤨\";\n  if (percentage === 0) emoji = \"🤦‍♂️\";\n\n  return (\n    <>\n      <p className=\"result\">\n        <span>{emoji}</span> You scored <strong>{points}</strong> out of\n        {maxPossiblePoints} ({Math.ceil(percentage)}%)\n      </p>\n      <p className=\"highscore\">(Highscore: {highscore} points)</p>\n      <button\n        className=\"btn btn-ui\"\n        onClick={() => dispatch({ type: \"restart\" })}\n      >\n        Restart quiz\n      </button>\n    </>\n  );\n}\n\nexport default FinishScreen;"],"mappings":";AAAA,SAASA,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,YAAYA,CAAA,EAAG;EACxB;;EAEE,MAAMC,UAAU,GAAIC,MAAM,GAAGC,iBAAiB,GAAI,GAAG;EAErD,IAAIC,KAAK;EACT,IAAIH,UAAU,KAAK,GAAG,EAAEG,KAAK,GAAG,IAAI;EACpC,IAAIH,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,GAAG,EAAEG,KAAK,GAAG,IAAI;EACtD,IAAIH,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAEG,KAAK,GAAG,IAAI;EACrD,IAAIH,UAAU,IAAI,CAAC,IAAIA,UAAU,GAAG,EAAE,EAAEG,KAAK,GAAG,IAAI;EACpD,IAAIH,UAAU,KAAK,CAAC,EAAEG,KAAK,GAAG,OAAO;EAErC,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAGS,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnBR,OAAA;QAAAQ,QAAA,EAAOD;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,gBAAY,eAAAb,OAAA;QAAAQ,QAAA,EAASH;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,WACzD,EAACP,iBAAiB,EAAC,IAAE,EAACQ,IAAI,CAACC,IAAI,CAACX,UAAU,CAAC,EAAC,IAC9C;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJb,OAAA;MAAGS,SAAS,EAAC,WAAW;MAAAD,QAAA,GAAC,cAAY,EAACQ,SAAS,EAAC,UAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5Db,OAAA;MACES,SAAS,EAAC,YAAY;MACtBQ,OAAO,EAAEA,CAAA,KAAMC,QAAQ,CAAC;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAE;MAAAX,QAAA,EAC9C;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP;AAACO,EAAA,GA3BQjB,YAAY;AA6BrB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}