{"ast":null,"code":"var _jsxFileName = \"/workspaces/react-quiz/src/components/finishScreen.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// import { useQuiz } from \"../contexts/QuizContext\";\n\nfunction FinishScreen({\n  points,\n  max,\n  highscore,\n  dispatch\n}) {\n  //   const { points, maxPossiblePoints, highscore, dispatch } = useQuiz();\n\n  const percentage = points / maxPossiblePoints * 100;\n  let emoji;\n  if (percentage === 100) emoji = \"🥇\";\n  if (percentage >= 80 && percentage < 100) emoji = \"🎉\";\n  if (percentage >= 50 && percentage < 80) emoji = \"🙃\";\n  if (percentage >= 0 && percentage < 50) emoji = \"🤨\";\n  if (percentage === 0) emoji = \"🤦‍♂️\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \" You scored \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 41\n      }, this), \" out of\", maxPossiblePoints, \" (\", Math.ceil(percentage), \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"highscore\",\n      children: [\"(Highscore: \", highscore, \" points)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-ui\",\n      onClick: () => dispatch({\n        type: \"restart\"\n      }),\n      children: \"Restart quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = FinishScreen;\nexport default FinishScreen;\nvar _c;\n$RefreshReg$(_c, \"FinishScreen\");","map":{"version":3,"names":["FinishScreen","points","max","highscore","dispatch","percentage","maxPossiblePoints","emoji","_jsxDEV","_Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Math","ceil","onClick","type","_c","$RefreshReg$"],"sources":["/workspaces/react-quiz/src/components/finishScreen.js"],"sourcesContent":["// import { useQuiz } from \"../contexts/QuizContext\";\n\nfunction FinishScreen({ points, max, highscore, dispatch }) {\n  //   const { points, maxPossiblePoints, highscore, dispatch } = useQuiz();\n\n  const percentage = (points / maxPossiblePoints) * 100;\n\n  let emoji;\n  if (percentage === 100) emoji = \"🥇\";\n  if (percentage >= 80 && percentage < 100) emoji = \"🎉\";\n  if (percentage >= 50 && percentage < 80) emoji = \"🙃\";\n  if (percentage >= 0 && percentage < 50) emoji = \"🤨\";\n  if (percentage === 0) emoji = \"🤦‍♂️\";\n\n  return (\n    <>\n      <p className=\"result\">\n        <span>{emoji}</span> You scored <strong>{points}</strong> out of\n        {maxPossiblePoints} ({Math.ceil(percentage)}%)\n      </p>\n      <p className=\"highscore\">(Highscore: {highscore} points)</p>\n      <button\n        className=\"btn btn-ui\"\n        onClick={() => dispatch({ type: \"restart\" })}\n      >\n        Restart quiz\n      </button>\n    </>\n  );\n}\n\nexport default FinishScreen;\n"],"mappings":";;;AAAA;;AAEA,SAASA,YAAYA,CAAC;EAAEC,MAAM;EAAEC,GAAG;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAC1D;;EAEA,MAAMC,UAAU,GAAIJ,MAAM,GAAGK,iBAAiB,GAAI,GAAG;EAErD,IAAIC,KAAK;EACT,IAAIF,UAAU,KAAK,GAAG,EAAEE,KAAK,GAAG,IAAI;EACpC,IAAIF,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,GAAG,EAAEE,KAAK,GAAG,IAAI;EACtD,IAAIF,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAEE,KAAK,GAAG,IAAI;EACrD,IAAIF,UAAU,IAAI,CAAC,IAAIA,UAAU,GAAG,EAAE,EAAEE,KAAK,GAAG,IAAI;EACpD,IAAIF,UAAU,KAAK,CAAC,EAAEE,KAAK,GAAG,OAAO;EAErC,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACEF,OAAA;MAAGG,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnBF,OAAA;QAAAE,QAAA,EAAOH;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,gBAAY,eAAAP,OAAA;QAAAE,QAAA,EAAST;MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,WACzD,EAACT,iBAAiB,EAAC,IAAE,EAACU,IAAI,CAACC,IAAI,CAACZ,UAAU,CAAC,EAAC,IAC9C;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJP,OAAA;MAAGG,SAAS,EAAC,WAAW;MAAAD,QAAA,GAAC,cAAY,EAACP,SAAS,EAAC,UAAQ;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5DP,OAAA;MACEG,SAAS,EAAC,YAAY;MACtBO,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC;QAAEe,IAAI,EAAE;MAAU,CAAC,CAAE;MAAAT,QAAA,EAC9C;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP;AAACK,EAAA,GA3BQpB,YAAY;AA6BrB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}